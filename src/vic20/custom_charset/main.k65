//-------------------------------------------------------------------------------

[SPACE=0x20]

//-------------------------------------------------------------------------------

var ZP_0=0

var RTCLOK=0xA2, STACK=0x100, CHARSET=0x1C00, SCREEN_RAM=0x1E00, COLOR_RAM=0x9600, IER1=0x911E

var VICCRO=0x9000,
    VICCR1, VICCR2, VICCR3, VICCR4, VICCR5, VICCR6, VICCR7, VICCR8,
    VICCR9, VICCRA, VICCRB, VICCRC, VICCRD, VICCRE, VICCRF

//-------------------------------------------------------------------------------

inline pause {
  a=RTCLOK { a?RTCLOK } ==
}


func clear_memory {
  a=SPACE x=0 { SCREEN_RAM,x=a SCREEN_RAM+0x100,x=a x++ } !=
  a=x { COLOR_RAM,x=a COLOR_RAM+0x100,x=a x++ } !=
  //x=21 a=SPACE { ZP_0,x=a x--} n-?
}

//-------------------------------------------------------------------------------
var IRQROUT=0xEABF

naked mine_irq {
  //RTCLOK++

  goto IRQROUT
  //a?? y=a a?? x=a a?? RTI: return_i
}

//-------------------------------------------------------------------------------

var CINV_L=0x0314, CINV_H, NMINV_L=0x0318, NMINV_H

main {
  pause i+
  
  IER1=a=0x7F // disable NMI
  
  clear_memory
  
  VICCR2=a=0b10010110 VICCR5=a=0b11111111 // screen $1E00 charset $1C00 
  VICCR3=a=0b00101110

  CINV_L=a=&<mine_irq CINV_H=a=&>mine_irq
  
  x=0xFF s=x

  i-

  SCREEN_RAM=a=0 SCREEN_RAM+1=a=1

  {} always
}


//-------------------------------------------------------------------------------

// 64 --> 1C00-1E00
data fonts {
  address 0x1c00
  0x70 0x7B 0x1E 0x3F 0x33 0x1F 0x7B 0x70
  0x00 0xE0 0x3C 0x1F 0xF3 0x8C 0xF0 0x00
}