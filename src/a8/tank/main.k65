//-----------------------------------------------------------------------------
// variables
//-----------------------------------------------------------------------------

var tankAnimStep=0, tankJumpCounter

var orgCharset=0xE000, newCharset=0x0400, screen = 0x0800

//-----------------------------------------------------------------------------
// const
//-----------------------------------------------------------------------------

[ROW = 32]
[TANK_START = ROW*5+2]

//-----------------------------------------------------------------------------
// draw procedurs
//-----------------------------------------------------------------------------
func drawTank {
  x=2 {
    screen+[TANK_START-ROW],x=a=0
    screen+TANK_START,x=a=tank,x
    screen+[TANK_START+ROW],x=a=tank+3,x
    screen+[TANK_START+ROW*2],x=a=tank+6,x
    x--
  } >=0 
}

func drawJumpTank {
  x=2 {
    screen+[TANK_START-ROW],x=a=tank,x
    screen+TANK_START,x=a=tank+3,x
    screen+[TANK_START+ROW],x=a=tank+6,x
    screen+[TANK_START+ROW*2],x=a=0
    x--
  } >=0 
}

inline animTank {
  x=2 { tank+6,x=a=tank_base,x x-- } >=0
  x=tankAnimStep tank+6,x=a=0 x-- n+?{ x=2 } tankAnimStep=x
}

//-----------------------------------------------------------------------------
// VBLANK interrupt
//-----------------------------------------------------------------------------
inline vbi {
  a=tankJumpCounter
  !={ drawJumpTank tankJumpCounter-- } else {

    drawTank

    //simlation
    a=RANDOM a?7 =={ tankJumpCounter=a=50 }

  }

  a=RTCLOK a&3
  =={
    animTank
  }
}

//-----------------------------------------------------------------------------
// NMI handler
//-----------------------------------------------------------------------------
naked nmi {
  RTCLOK++
  
  phr vbi plr

  return_i
}

//-----------------------------------------------------------------------------
// helpers
//-----------------------------------------------------------------------------
inline moveCharset {
  x=0 {
    newCharset,x=a=orgCharset,x
    newCharset+0x100,x=a=orgCharset+0x100,x
    newCharset+0x200,x=a=orgCharset+0x200,x
    newCharset+0x300,x=a=orgCharset+0x300,x
    x++
  } !=  
}

func clearScreen {
  x=0 { screen,x=a=0 screen+0x100,x=a x++ } !=   
}

//-----------------------------------------------------------------------------
// initializers
//-----------------------------------------------------------------------------
inline initVariables {
  tankAnimStep=a=0 tankJumpCounter=a
}

func init {
  pause i+ DMACTL=NMIEN=a=0

  moveCharset CHBASE=a=&>newCharset PORTB=a=0xFE

  DLISTL=a=&<dl DLISTH=a=&>dl
  NMIADL=a=&<nmi NMIADH=a=&>nmi

  clearScreen initVariables
  
  DMACTL=a=0b00100001
  NMIEN=a=0x40
}

//-----------------------------------------------------------------------------
// main function
//-----------------------------------------------------------------------------
main {
  init

  {} always
}

//-----------------------------------------------------------------------------
// data
//-----------------------------------------------------------------------------
data tank {
  0x42 0x55 0x4E
  0x55 0x80 0x55
  0x3C 0x3F 0x0F
}

data tank_base {
  0x3C 0x3F 0x0F
}

data dl {
  nocross
  for x=1..10 eval [ 0x70 ]
  0x42 &<screen &>screen
  for x=1..8 eval [ 2 ]
  0x41 &<dl &>dl
}

//-----------------------------------------------------------------------------